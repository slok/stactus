// Code generated by mockery v2.45.0. DO NOT EDIT.

package storagemock

import (
	context "context"

	model "github.com/slok/stactus/internal/model"
	mock "github.com/stretchr/testify/mock"
)

// SystemGetter is an autogenerated mock type for the SystemGetter type
type SystemGetter struct {
	mock.Mock
}

// ListAllSystems provides a mock function with given fields: ctx
func (_m *SystemGetter) ListAllSystems(ctx context.Context) ([]model.System, error) {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for ListAllSystems")
	}

	var r0 []model.System
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context) ([]model.System, error)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(context.Context) []model.System); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.System)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewSystemGetter creates a new instance of SystemGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSystemGetter(t interface {
	mock.TestingT
	Cleanup(func())
}) *SystemGetter {
	mock := &SystemGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
