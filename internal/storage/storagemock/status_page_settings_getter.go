// Code generated by mockery v2.45.0. DO NOT EDIT.

package storagemock

import (
	context "context"

	model "github.com/slok/stactus/internal/model"
	mock "github.com/stretchr/testify/mock"
)

// StatusPageSettingsGetter is an autogenerated mock type for the StatusPageSettingsGetter type
type StatusPageSettingsGetter struct {
	mock.Mock
}

// GetStatusPageSettings provides a mock function with given fields: ctx
func (_m *StatusPageSettingsGetter) GetStatusPageSettings(ctx context.Context) (*model.StatusPageSettings, error) {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for GetStatusPageSettings")
	}

	var r0 *model.StatusPageSettings
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context) (*model.StatusPageSettings, error)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(context.Context) *model.StatusPageSettings); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.StatusPageSettings)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewStatusPageSettingsGetter creates a new instance of StatusPageSettingsGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewStatusPageSettingsGetter(t interface {
	mock.TestingT
	Cleanup(func())
}) *StatusPageSettingsGetter {
	mock := &StatusPageSettingsGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
